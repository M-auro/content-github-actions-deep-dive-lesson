name: Deploy my lambda Function
on: 
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install linting libraries
        run: |
          cd function
          pip install flake8
      - name: run linting checks with flake8
        run: |
          # Select identifies which errors should cause the job to fail
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Run flake8 without exit-zero to ensure the job fails on errors
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install libraries
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: create zip bundle
        run: |
          zip -r ${{ github.workspace }}/${{ github.sha }}.zip .
      - name: archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zip-bundle
          path: ${{ github.workspace }}/${{ github.sha }}.zip

  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: zip-bundle
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1
      - name: Upload to S3
        run: aws s3 cp "${{ github.workspace }}/${{ github.sha }}.zip" "s3://mauro-github-actions-bucket/${{ github.sha }}.zip"

  test:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name : Create test function
        run: |  
          aws lambda create-function --function-name test-function \  
            --code S3Bucket=mauro-github-actions-bucket,S3Key=${{ github.sha }}.zip \  
            --handler lambda_function.lambda_handler --runtime python3.8 \  
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/service-role/mauro-lambda-function-role-l78v2tws  
      - name: Wait 30 seconds  
        run: sleep 30  
      - name: Destroy test function  
        if: ${{ always() }}  
        run: aws lambda delete-function --function-name test-function


  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps: 
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1
      - name: Update Function code
        run: |
          aws lambda update-function-code \
            --function-name mauro-lambda-function \
            --s3-bucket mauro-github-actions-bucket \
            --s3-key ${{ github.sha }}.zip \
            --publish








